---
import Image from '~/components/common/Image.astro';

interface Props {
  items: {
    title: string;
    description: string;
    image?: {
      src: string;
      alt: string;
    } | string;
    href?: string;
    link?: string;
  }[];
  columns?: number;
  defaultStyles?: boolean;
  classes?: {
    container?: string;
    item?: string;
  };
}

const { 
  items, 
  columns = 4, 
  defaultStyles = true,
  classes = {} 
} = Astro.props;

const { container: containerClass = '', item: itemClass = '' } = classes;
---

<div class={`relative mt-8 ${containerClass}`}>
  <div class={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-${columns} gap-8 ${defaultStyles ? 'px-4 md:px-6' : ''}`}>
    {items.map((item, index) => {
      const href = item.href || item.link || '#';
      const imageSrc = typeof item.image === 'string' ? item.image : item.image?.src;
      const imageAlt = typeof item.image === 'string' ? item.title : item.image?.alt || item.title;
      
      return (
        <a
          href={href}
          class={`group block rounded-lg overflow-hidden ${defaultStyles ? 'shadow-lg hover:shadow-xl transition-all duration-300 bg-white dark:bg-gray-800 hover:translate-y-[-5px]' : ''} ${itemClass}`}
          style={`--animation-delay: ${index * 100}ms`}
        >
          {imageSrc && (
            <div class="relative aspect-[4/3]">
              <Image
                class="w-full h-full object-cover"
                width={400}
                height={300}
                src={imageSrc}
                alt={imageAlt}
                loading="lazy"
                decoding="async"
              />
              {defaultStyles && (
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              )}
            </div>
          )}
          <div class={`${defaultStyles ? 'p-6' : ''}`}>
            <h3 class={`text-xl font-bold mb-2 ${defaultStyles ? 'group-hover:text-primary transition-colors duration-300 text-gray-900 dark:text-white' : ''}`}>
              {item.title}
            </h3>
            <p class={`${defaultStyles ? 'text-muted dark:text-slate-400' : ''}`}>
              {item.description}
            </p>
          </div>
        </a>
      );
    })}
  </div>
</div>

<style>
  .fade-in {
    opacity: 0;
    animation: fadeInAnimation 0.6s ease forwards;
    animation-delay: var(--animation-delay, 0ms);
  }

  @keyframes fadeInAnimation {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* 后备样式，确保即使动画失败内容也会显示 */
  .intersect-once:not(:has([data-animated])) {
    opacity: 1 !important;
    transform: none !important;
  }
</style> 
